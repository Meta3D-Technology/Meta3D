* DONE build engine packages: engine basic + create scene package + render scene package + whole engine package(use first twos)


** DONE scene package:
api
init, update jobs

transform, camera, gameObject

add other apis


pass compile


** DONE refactor: rename extensionName to extensionProtocolName

meta3d-package
meta3d



** DONE engine basic package:
register work plugin root
register extensions:
engine basic, engine core, most, immutable? extension

engineCoreState = setIsDebug(engineCoreState, isDebug)





** DONE render package:
api
init(material, geometry), update jobs

accept canvas





use webgl, no worker
# use webgpu





** DONE whole engine package has create scene, render api:
api:
    init,update,render
    scene api:
        encapsulate to engine core state, service to meta3d state;

init:
invoke three packages' init;
engineCoreState = engineCoreService.init(engineCoreState, meta3dState)
run init pipeline

update:
run update pipeline

render:
run render pipeline




* TODO download whole engine package to use as a engine to draw a cube

engine whole package:
engine core, immutable, most
packages




engine basic package:
register extensions:
# engine basic, engine core, most, immutable? extension
engine basic

root





engine render package:
register extensions:
webgl1, ...


# ** TODO feat(default): meta3d: if not has entry extension, error with info

** DONE fix(default): meta3d: loadPackage should get current package's entry extensionProtocolName

////should store package's entry extensionProtocolName when build package!


** TODO pass empty gameObject run test

init

loop

** TODO pass cube run test


* TODO refactor: rename getGL to getGl??


* TODO add 3D View custom control(low level) implment by FBO

provide init life handle

can use to build edit view, scene view high level custom controls

* TODO run test: add edit view based on 3D view to show a cube + arcball camera + grid


* TODO add two buttons, to add a cube gameObject and add a arcball camera controller gameObject


* TODO add scene view(high level), add run button to run


* TODO publish
