* TODO 加强Custom

//TODO 改进 Ap Assemble->Custom:
TODO 改进 UserCenter->Custom:
1.加入input/action后，显示name而不是file str，并显示“修改”按钮
2.点击“修改”按钮后，显示TextArea with file str，并显示“提交修改”按钮
3.点击“提交修改”按钮后，更新file str，并且如果name change，需要对应更新uiControlInspectorData->input->inputName



* ReDesign Custom

Custom:
Ts Module(just as utils)
Action
Input



Action,Input can invoke Ts Module's export functions

custom action/input should be compile to action/input

# can publish custom action/input

can get custom action/input from selected action/input


all action/input should be write online!


custom data store in element store


import element can get its custom data

# element assemble's custom data = selected action/input + imported custom


* TODO 为custom data提供代码编辑器


![image](https://img2023.cnblogs.com/blog/419321/202311/419321-20231125153737959-249842872.png)

![image](https://img2023.cnblogs.com/blog/419321/202311/419321-20231125165344986-1891902166.png)



# 目的

1.可以更好地编辑custom data
//2.可以发布custom data到贡献市场

# 具体方案

对于目的1：

- 在代码编辑器中编辑custom data，**支持ts语法，提供代码提示**（包括获得editor whole协议、选择的action等贡献的协议  中定义的类型）、高亮、自动补全等功能 


- file str应该跟原生的input/action的Main.ts文件一样，这样可方便用户要发布时可直接将其拷贝到本地

/*
对于目的2：

- 增加对协议的编辑和发布
  - 优化协议的开发过程：只填一些模板的类型，以及package.json的必备信息（如name、version），即可直接发布（到npm?)

- 增加发布到贡献市场
*/



refer to:

https://juejin.cn/post/7121512390159499278#heading-10
https://juejin.cn/post/7146457023415058468
https://theia-ide.org/

https://cloud.tencent.com/document/product/1301/57912






# ** TODO update Js Module to Ts Module



* TODO update custom input

TODO custom action/input should be compile to action/input

TODO can publish custom action/input

TODO can get custom action/input from selected action/input
test js code



Input:
need type:
editor whole package
action state
    could read type of file by actionName?


** TODO basic monaco demo

TODO show


TODO can get compiled value


# TODO add Ts Module
# can as contribute?

# 多文件

# TODO can get compiled value






TODO local: can get compiled value in webpack

TODO local: handle import protocol's actionName

TODO local: handle import utils(Ts Module)
bundle


TODO write a gulp to compile ts and bundle!

remove imported "export"
nest import


implement by rescript!

TODO bdd test


TODO run test


```ts
export default function getModelsInOrder(currentModel, monaco) {
  const allModels = monaco.editor.getModels();
  //Parse import statements to perform DFS starting at selected model
  const graph = allModels.map((model) => {
    let importRegex = /(from|import)\s+["']([^"']*)["']/gm;
    let importIndices = (model.getValue().match(importRegex) ?? []) //Get import strings
      .map((s) => s.match(/["']([^"']*)["']/)![1]) //find name
      .map((s) =>
        allModels.findIndex(
          (findImportModel) =>
            s === findImportModel.uri.path.substring(1).replace(/\.[^.]*$/, "") //compare formatted import to formatted filename
        )
      )
      .filter((index) => index !== -1);
    return importIndices;
  });

```




** TODO monaco demo2 by give more type infer(e.g. action state type, editor whole package)







** TODO custom input write online

store in element

import by element

TODO fix ui:
manage custom in element assemble instead of in ap assemble


** TODO input write local

same content as online, except import protocol types 

TODO publish

TODO compiled to custom input when show them in element assemble


# same content as online, just store in local and copy to online


# * TODO add Ts Module(as utils)

# can as contribute


# TODO Action,Input can invoke Ts Module's export functions

# TODO publish Ts Module

# TODO can get Ts Module from selected Published


# TODO how to handle import utils(Ts Module) in Input?



# ** TODO add Ts Module for custom input


# ** TODO add Ts Module for local input(utils)








# * TODO add "only import custom" button






* TODO update custom action

TODO should simplify type to forward, ... funcs!




* TODO update custom input->inputName: now can be arbitraily name

custom input is add by UI Control->Input!

auto get its name for build input protocol name!


* TODO update custom actions->actionName: now can be arbitraily name

protocol auto add "-action-"




* TODO adjust custom ui

TODO move add/remove/edit custom to element assemble


TODO refactor UI Controls, Selected UI Controls :
no need to select ui controls in contribute market! select when add ui control instead!!!

refer to:
https://app.appsmith.com/app/my-first-application/page1-65681c0a77819e3b1160e2d9/edit






TODO refactor set parent
use drag instead of select parent first!









* TODO 增加用户中心

查看、//修改、//删除 用户发布的扩展、贡献、包、应用、页面


# 从市场中关注协议到用户中心
# TODO store custom data for user
# TODO add a new database table to store custom data of user
# TODO how to handle import app 's custom data?

# Ap Assemble Space
# TODO add Elements, Selected Elements


auto save element, app to user(to local)

refer to:
https://app.appsmith.com/applications



TODO optimize select one element at least for app:
    if select multiple elements, when save/publish app should auto generate one element with inner element name!










* TODO platform: 加强市场

TODO 增加分类显示

# TODO 增加按最新、下载量等排序

TODO 增加推荐榜（如包括推荐的App等）

TODO 扩展、贡献、应用、页面增加图片等说明

# ** TODO Extension, Contribute, Package

# refer to:
# https://airtable.com/marketplace/category/all-apps
# https://marketplace.visualstudio.com/items?itemName=amodio.restore-editors

# *** TODO Market show all implements, instead protocols

# use protocol icon


# *** TODO add download count, update time, score, m

# *** TODO update ui

# 2 column

# icon + [
#     [ display name ]
# [publisher, repo, download count, m]
# [description]
# [version, buttons...]
# ]

# *** TODO Contributes: add show by category



** TODO hidden Extension, Contribute Market and Package Assemble

they are visiable only for administrator and pay user!







** TODO ShowByApp, ByElement

refer to:
https://www.zcappp.cn/plugins
https://app.appsmith.com/templates

*** TODO add preview, download count, update time, scrore, m

*** TODO element: add publisher, description

*** TODO update ui

3 column

[preview]
[display name]
[publisher, download count, m],
[description]
[version, buttons...]


*** TODO add recommend

refer to:
https://marketplace.visualstudio.com/ -> Featured


TODO use first three ones

TODO add database table




* TODO 平台：element assemble: add selected ui control->outline, pick, drag


 * TODO drag to set parent



* TODO 优化平台UI

TODO 使用图标代替文字按钮
e.g. 替代运行按钮

TODO 更新排版
e.g. 更新Extensions、 UI Controls中的图文小图标排版










* TODO 重命名”应用“为”编辑器“



* TODO 更新extension    

TODO 更新extension, contribute, package，提供典型的编辑器、引擎组件
TODO remove unused ones
TODO update icon
action, uiControl, uiControlInput, package, extension, contribute use different icon
TODO update displayName，使用中文
TODO uiControlName, actionName, inputName should add "_Meta3d" postfix



* TODO 重构：统一编码规范





* TODO 构建三个示例场景

1.Engine + Example use Engine package
2.Editor
3.Scene use Editor to build and publish

** TODO build one big scene with glbs as showcase

3D场景漫游


* TODO 跑通发布扩展、贡献的流程

TODO 跑通：
“根据template，发布extension/contribute”
//- “使用yeoman，发布extension/contribute”
发布action
发布input
发布uiControl


* TODO 隐藏web3登录

* TODO 增加官方用户:meta3d

* TODO "publisher"改为meta3d

* TODO move backend to https://github.com/Meta3D-Technology/Meta3D-Backend

TODO pass run test


* TODO add 新手引导

refe to:
https://www.google.com.hk/search?q=%E6%96%B0%E6%89%8B%E5%BC%95%E5%AF%BC+ToB&oq=%E6%96%B0%E6%89%8B%E5%BC%95%E5%AF%BC+ToB&gs_lcrp=EgZjaHJvbWUyBggAEEUYOTIJCAEQABgMGIAEMgkIAhAAGAwYgAQyCQgDEAAYDBiABDIJCAQQABgMGIAEMgcIBRAAGIAEMgkIBhAAGAwYgAQyBwgHEAAYgATSAQg0NDAzajBqN6gCALACAA&sourceid=chrome&ie=UTF-8#ip=1

https://maimai.cn/article/detail?fid=1744301662&efid=zWvZy6zgFCQn0gIGeGluPA



https://app.appsmith.com/




TODO 平台首页:
加入引导链接，如 创建第一个引擎的文档链接等
加入反馈链接（discussion, issue, 加群）

引导用户star！

TODO 加入帮助中心
包括新手引导

refer to:
如何实现前端新手引导功能？
https://juejin.cn/post/6960493325061193735

第一次进入平台

/*
用户刚进来平台后有两个选项：

浏览发布的编辑器
快速注册
*/
//要说明各自的简介，如：只需输入账号名即可完成注册！快来注册吧！

给出简介：
https://pic4.zhimg.com/80/v2-b79b57c19567a1ce65ccc4d287743e67_1440w.webp

# 包括一个宣传视频
给出详情跳转链接




吸引客户:
> 对于商业产品客户来说，使用一个产品前需要考虑的非常重要的点就是：这个产品能否免费试用？试用结束后是怎么计费的？性价比是否高，是否划算...
给出详情跳转链接


TODO 给出“目前为体验阶段，所有用户均免费使用”、“想要更多权益请详见”->跳转到咨询页面

引导用户快速注册
如：只需输入账号名即可完成注册！快来注册吧！





第一次登录
第一次进入Market
第一次进入发布的编辑器、发布的页面
第一次进入Ap Assemble
第一次进入Element Assemble
第一次进入Package Assemble
第一次发布编辑器
第一次发布页面
第一次使用Custom