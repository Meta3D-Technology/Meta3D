* 扩展的类型

split engine-core to scene, job-pipeline
so engine is split to these abstract extensions(with contribute):
scene
job-pipeline
scene-graph(for gltf parse, generate, load, ...)
...



so engine is split to these specific extensions(without contribute):
webgl
webgpu
...






so 3rd-library is split to these specific extensions(without contribute):
most
immutable
...






editor is split to these abstract extensions(change to specific extensions?):
ui
event
...





editor is split to these ui extensions(may with contribute?):
button
menu
scene view
<!-- inspector -->
布局 or container?
modal
...


* TODO add editor' extensions,contributes 

# ** TODO finish current editor demo(register custom ui)


** DONE add a button, click can log

*** DONE add meta3d-ui, ...

*** DONE pass run test

*** DONE implement reducer

dispatch action

** TODO update ui

*** TODO update meta3d-ui

use json for imgui ui?
relearn unity->ui element!

*** TODO use imgui for ui instead of dom

use webgl
(should be convenient to replace webgl to webgpu in the future!)

** TODO UI use webgl render imgui to implement


*** TODO use UI-Render-WebGL extension for UI extension!  so can use UI-Render-WebGPU extension for UI to use webgpu and not edit UI code!!!

UI dependent on UI-Render-Type;
UI-Render-WebGL, UI-Render-WebGPU implement UI-Render-Type.






*** TODO implement drawBox


# *** TODO implement drawImage


*** TODO add VisualElement


*** TODO implement drawButton by custom control


*** TODO use skin


*** TODO support whole skin(e.g. can set background by set whole canvas->clearColor)


* TODO improve

** TODO improve UI

*** TODO support check state change for update geometry buffer

use webgpu

*** TODO support draw chinese text

*** TODO support 3d ui


# *** TODO add bdd test





# *** TODO implement reducer

# dispatch action



** TODO finish TODO




# *** TODO add bdd test


# ** TODO add a button, click can log info and change its color
** TODO add a button, click can render a triangle
(button extension)


*** TODO add a button, click can log


*** TODO prepare engine, click can render a triangle



** TODO update event

*** TODO update event manager


** TODO add bdd test




* TODO publish




* TODO add a button, register custom ui


*** TODO implement drawText

default load .fnt, .bitmap resources, not open its control to user


*** TODO add window control (beginWindow, endWindow)

usage:
```
beginWindow(x,y,width, height, title)
(window content's z-index should + 1!)

...

drawButton

endWindow()
```




*** TODO implement drawCopyTextArea


