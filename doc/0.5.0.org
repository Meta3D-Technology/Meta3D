* 扩展的类型

split engine-core to scene, job-pipeline
so engine is split to these abstract extensions(with contribute):
scene
job-pipeline
scene-graph(for gltf parse, generate, load, ...)
...



so engine is split to these specific extensions(without contribute):
webgl
webgpu
...






so 3rd-library is split to these specific extensions(without contribute):
most
immutable
...






editor is split to these abstract extensions(change to specific extensions?):
ui
event
...





editor is split to these ui extensions(may with contribute?):
button
menu
scene view
<!-- inspector -->
布局 or container?
modal
...


* TODO add editor' extensions,contributes 

# ** TODO finish current editor demo(register custom ui)


** TODO add a button, click can log

*** DONE add meta3d-ui, ...

*** TODO pass run test


** TODO update ui

*** TODO update meta3d-ui

use json for imgui ui?
relearn unity->ui element!

*** TODO use imgui for ui instead of dom

use webgl
(should be convenient to replace webgl to webgpu in the future!)


*** TODO add bdd test



** TODO finish TODO



** TODO update event

*** TODO update event manager


*** TODO add bdd test



# ** TODO add a button, click can log info and change its color
** TODO add a button, click can render a triangle
(button extension)

dispatch action

*** TODO add a button, click can log


*** TODO prepare engine, click can render a triangle


** TODO add a button, register custom ui

*** TODO implement reducer


* TODO publish