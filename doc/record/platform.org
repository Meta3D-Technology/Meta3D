* DONE design
** TODO 加载多个扩展，组成引擎

load all select extension binarys when enter "build engine" button:
# check dependent extensions
# register extension API
register extension's work plugin


export engine API(e.g. for create scene)?

dependent map?


** TODO 扩展之间通过协议互相调用


load all select extension binarys when enter "build engine" button:
register extension API




** TODO 加载contribute point到引擎的扩展中

how to register components?


** TODO feat(editor): add work plugin?




* DONE redesign

** DONE how to get protocol???


# ** TODO add platform-extension

# ** TODO add platform-extension-pacakge

# ** TODO rewrite platform-engine

# ** TODO rewrite platform-app

# ** TODO rewrite platform-editor


* TODO implement

** DONE remove, keep simple

** TODO improve

*** TODO rename contribute point to contribute

*** TODO add simplest extension, contribute

*** TODO extract protocols/, move contribute_protocols/, extension_protocols/ here


*** TODO extension add life cycle

*** TODO add contribute name to dependent map
*** TODO register contribute from dependent map


*** TODO change engine to be extension package

**** TODO engine api should be a extension


*** TODO change editor to be app


** TODO publish and load extension
extension should be binary

pack extension to binary file

publish extension binary to platform



** TODO publish and load extension package


** TODO publish and load contribute


** TODO pass engine(extension package)

** TODO pass editor(app)


** TODO add bdd test

** TODO restore removed


* TODO check dependent extensions when load all select extension binarys