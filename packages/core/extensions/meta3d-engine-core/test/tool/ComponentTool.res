let buildComponentContribute = (
  ~componentName="componentA",
  ~createStateFunc=(. config) => Obj.magic(1),
  ~getGameObjectsFunc=(. state, _) => Obj.magic(1),
  ~createComponentFunc=(. state) => (state, Obj.magic(1)),
  ~addComponentFunc=(. state, _, _) => state,
  ~removeComponentFunc=(. state, _, _) => state,
  ~hasComponentFunc=(. state, _) => false,
  ~getComponentFunc=(. state, _) => Obj.magic(1),
  ~getNeedDisposedComponentsFunc=(. state) => []->Obj.magic,
  ~getAllComponentsFunc=(. state) => Obj.magic(1),
  ~getComponentDataFunc=(. state, _, _) => Obj.magic(1),
  ~setComponentDataFunc=(. state, _, _, _) => state,
  ~deferDisposeComponentFunc=(. state, _) => state,
  ~disposeComponentsFunc=(. state, _) => (state, []),
  ~cloneComponentFunc=(. state, _, _, _) => (state, Obj.magic(1)),
  ~restore=(. currentState, targetState) => targetState,
  ~deepCopy=(. state) => state,
  (),
): Meta3dEngineCoreProtocol.RegisterComponentType.componentContribute => {
  componentName,
  createStateFunc,
  getGameObjectsFunc,
  createComponentFunc,
  addComponentFunc,
  removeComponentFunc,
  hasComponentFunc,
  getComponentFunc,
  getNeedDisposedComponentsFunc,
  getAllComponentsFunc,
  getComponentDataFunc,
  setComponentDataFunc,
  deferDisposeComponentFunc,
  disposeComponentsFunc,
  cloneComponentFunc,
  restore,
  deepCopy,
}
