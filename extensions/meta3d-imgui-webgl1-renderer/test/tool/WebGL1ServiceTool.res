open Sinon

let buildService = (
  ~sandbox,
  ~getContext=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~createProgram=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~linkProgram=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~useProgram=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~uniformMatrix4fv=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~uniform1i=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~uniform1f=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~uniform3f=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getAttribLocation=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getUniformLocation=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~shaderSource=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~compileShader=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~createShader=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getParameter=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getLinkStatus=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getShaderParameter=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getProgramParameter=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getShaderInfoLog=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getProgramInfoLog=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~attachShader=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~deleteShader=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~bindAttribLocation=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getCompileStatus=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getVertexShader=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getFragmentShader=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~createBuffer=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~bindBuffer=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~bufferFloat32Data=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~bufferUint16Data=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~bufferUint32Data=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getArrayBuffer=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getElementArrayBuffer=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getStaticDraw=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getDynamicDraw=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~disableVertexAttribArray=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~vertexAttribPointer=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~enableVertexAttribArray=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getExtension=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~drawElements=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~clearColor=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~clear=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~enable=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~disable=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getFloat=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getDepthTest=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getStencilTest=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getBlend=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getCullFace=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getFrontAndBack=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getBack=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getFront=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getCurrentProgram=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getBindingElementArrayBuffer=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getBindingArrayBuffer=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getSrcAlpha=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getOneMinusSrcAlpha=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~isEnabled=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~bindVertexArrayOES=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~blendFunc=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getTriangles=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getTriangleFan=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getUnsignedInt=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  ~getUnsignedShort=createEmptyStub(refJsObjToSandbox(sandbox.contents)),
  (),
): Meta3dWebgl1Protocol.ServiceType.service => {
  getContext: getContext,
  createProgram: createProgram,
  linkProgram: linkProgram,
  useProgram: useProgram,
  uniformMatrix4fv: uniformMatrix4fv,
  uniform1i: uniform1i,
  uniform1f: uniform1f,
  uniform3f: uniform3f,
  getAttribLocation: getAttribLocation,
  getUniformLocation: getUniformLocation,
  shaderSource: shaderSource,
  compileShader: compileShader,
  createShader: createShader,
  getParameter: getParameter,
  getLinkStatus: getLinkStatus,
  getShaderParameter: getShaderParameter,
  getProgramParameter: getProgramParameter,
  getShaderInfoLog: getShaderInfoLog,
  getProgramInfoLog: getProgramInfoLog,
  attachShader: attachShader,
  deleteShader: deleteShader,
  bindAttribLocation: bindAttribLocation,
  getCompileStatus: getCompileStatus,
  getVertexShader: getVertexShader,
  getFragmentShader: getFragmentShader,
  createBuffer: createBuffer,
  bindBuffer: bindBuffer,
  bufferFloat32Data: bufferFloat32Data,
  bufferUint16Data: bufferUint16Data,
  bufferUint32Data: bufferUint32Data,
  getArrayBuffer: getArrayBuffer,
  getElementArrayBuffer: getElementArrayBuffer,
  getStaticDraw: getStaticDraw,
  getDynamicDraw: getDynamicDraw,
  disableVertexAttribArray: disableVertexAttribArray,
  vertexAttribPointer: vertexAttribPointer,
  enableVertexAttribArray: enableVertexAttribArray,
  getExtension: getExtension,
  drawElements: drawElements,
  clearColor: clearColor,
  clear: clear,
  enable: enable,
  disable: disable,
  getFloat: getFloat,
  getDepthTest: getDepthTest,
  getStencilTest: getStencilTest,
  getBlend: getBlend,
  getCullFace: getCullFace,
  getFrontAndBack: getFrontAndBack,
  getBack: getBack,
  getFront: getFront,
  getCurrentProgram: getCurrentProgram,
  getBindingElementArrayBuffer: getBindingElementArrayBuffer,
  getBindingArrayBuffer: getBindingArrayBuffer,
  getSrcAlpha: getSrcAlpha,
  getOneMinusSrcAlpha: getOneMinusSrcAlpha,
  isEnabled: isEnabled,
  bindVertexArrayOES: bindVertexArrayOES,
  blendFunc: blendFunc,
  getTriangles: getTriangles,
  getTriangleFan: getTriangleFan,
  getUnsignedInt: getUnsignedInt,
  getUnsignedShort: getUnsignedShort,
}
